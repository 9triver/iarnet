syntax = "proto3";

package peer;

option go_package = "./proto";

service PeerService {
  rpc ExchangePeers(ExchangeRequest) returns (ExchangeResponse);
  rpc ExchangeProviders(ProviderExchangeRequest) returns (ProviderExchangeResponse);
  rpc CallProvider(ProviderCallRequest) returns (ProviderCallResponse);
}

message ExchangeRequest {
  repeated string known_peers = 1;  // List of peer addresses (e.g., "host:port")
}

message ExchangeResponse {
  repeated string known_peers = 1;
}

// Provider information exchange
message ProviderInfo {
  string id = 1;
  string name = 2;
  string type = 3;
  string host = 4;
  int32 port = 5;
  int32 status = 6;
  string peer_address = 7;  // Which peer manages this provider
}

message ProviderExchangeRequest {
  repeated ProviderInfo providers = 1;
}

message ProviderExchangeResponse {
  repeated ProviderInfo providers = 1;
}

// Remote provider method calls
message ProviderCallRequest {
  string provider_id = 1;
  string method = 2;
  bytes payload = 3;  // Serialized method parameters
}

message ProviderCallResponse {
  bool success = 1;
  string error = 2;
  bytes result = 3;  // Serialized method result
}