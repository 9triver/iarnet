// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: proto/peer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExchangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KnownPeers    []string               `protobuf:"bytes,1,rep,name=known_peers,json=knownPeers,proto3" json:"known_peers,omitempty"` // List of peer addresses (e.g., "host:port")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeRequest) Reset() {
	*x = ExchangeRequest{}
	mi := &file_proto_peer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRequest) ProtoMessage() {}

func (x *ExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_peer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRequest) Descriptor() ([]byte, []int) {
	return file_proto_peer_proto_rawDescGZIP(), []int{0}
}

func (x *ExchangeRequest) GetKnownPeers() []string {
	if x != nil {
		return x.KnownPeers
	}
	return nil
}

type ExchangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KnownPeers    []string               `protobuf:"bytes,1,rep,name=known_peers,json=knownPeers,proto3" json:"known_peers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeResponse) Reset() {
	*x = ExchangeResponse{}
	mi := &file_proto_peer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeResponse) ProtoMessage() {}

func (x *ExchangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_peer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeResponse.ProtoReflect.Descriptor instead.
func (*ExchangeResponse) Descriptor() ([]byte, []int) {
	return file_proto_peer_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeResponse) GetKnownPeers() []string {
	if x != nil {
		return x.KnownPeers
	}
	return nil
}

var File_proto_peer_proto protoreflect.FileDescriptor

const file_proto_peer_proto_rawDesc = "" +
	"\n" +
	"\x10proto/peer.proto\x12\x04peer\"2\n" +
	"\x0fExchangeRequest\x12\x1f\n" +
	"\vknown_peers\x18\x01 \x03(\tR\n" +
	"knownPeers\"3\n" +
	"\x10ExchangeResponse\x12\x1f\n" +
	"\vknown_peers\x18\x01 \x03(\tR\n" +
	"knownPeers2M\n" +
	"\vPeerService\x12>\n" +
	"\rExchangePeers\x12\x15.peer.ExchangeRequest\x1a\x16.peer.ExchangeResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_peer_proto_rawDescOnce sync.Once
	file_proto_peer_proto_rawDescData []byte
)

func file_proto_peer_proto_rawDescGZIP() []byte {
	file_proto_peer_proto_rawDescOnce.Do(func() {
		file_proto_peer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_peer_proto_rawDesc), len(file_proto_peer_proto_rawDesc)))
	})
	return file_proto_peer_proto_rawDescData
}

var file_proto_peer_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_peer_proto_goTypes = []any{
	(*ExchangeRequest)(nil),  // 0: peer.ExchangeRequest
	(*ExchangeResponse)(nil), // 1: peer.ExchangeResponse
}
var file_proto_peer_proto_depIdxs = []int32{
	0, // 0: peer.PeerService.ExchangePeers:input_type -> peer.ExchangeRequest
	1, // 1: peer.PeerService.ExchangePeers:output_type -> peer.ExchangeResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_peer_proto_init() }
func file_proto_peer_proto_init() {
	if File_proto_peer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_peer_proto_rawDesc), len(file_proto_peer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_peer_proto_goTypes,
		DependencyIndexes: file_proto_peer_proto_depIdxs,
		MessageInfos:      file_proto_peer_proto_msgTypes,
	}.Build()
	File_proto_peer_proto = out.File
	file_proto_peer_proto_goTypes = nil
	file_proto_peer_proto_depIdxs = nil
}
