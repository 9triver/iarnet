// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.0
// source: executor/executor.proto

package executor

import (
	proto "github.com/9triver/ignis/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandType int32

const (
	CommandType_UNSPECIFIED      CommandType = 0 // unknown command type
	CommandType_R_ADD_HANDLER    CommandType = 1 // router: add new handler to executor
	CommandType_R_REMOVE_HANDLER CommandType = 2 // router: remove handler from executor
	CommandType_R_EXECUTE        CommandType = 3 // router: execute task on executor
	CommandType_R_EXIT           CommandType = 4 // router: notify executor to stop
	CommandType_D_READY          CommandType = 5
	CommandType_D_RETURN         CommandType = 6
	CommandType_STREAM_CHUNK     CommandType = 7
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "R_ADD_HANDLER",
		2: "R_REMOVE_HANDLER",
		3: "R_EXECUTE",
		4: "R_EXIT",
		5: "D_READY",
		6: "D_RETURN",
		7: "STREAM_CHUNK",
	}
	CommandType_value = map[string]int32{
		"UNSPECIFIED":      0,
		"R_ADD_HANDLER":    1,
		"R_REMOVE_HANDLER": 2,
		"R_EXECUTE":        3,
		"R_EXIT":           4,
		"D_READY":          5,
		"D_RETURN":         6,
		"STREAM_CHUNK":     7,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_executor_executor_proto_enumTypes[0].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_executor_executor_proto_enumTypes[0]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{0}
}

type AddHandler struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Handler       []byte                 `protobuf:"bytes,2,opt,name=Handler,proto3" json:"Handler,omitempty"`
	Language      proto.Language         `protobuf:"varint,3,opt,name=Language,proto3,enum=proto.Language" json:"Language,omitempty"`
	Methods       []string               `protobuf:"bytes,4,rep,name=Methods,proto3" json:"Methods,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddHandler) Reset() {
	*x = AddHandler{}
	mi := &file_executor_executor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHandler) ProtoMessage() {}

func (x *AddHandler) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHandler.ProtoReflect.Descriptor instead.
func (*AddHandler) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{0}
}

func (x *AddHandler) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddHandler) GetHandler() []byte {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *AddHandler) GetLanguage() proto.Language {
	if x != nil {
		return x.Language
	}
	return proto.Language(0)
}

func (x *AddHandler) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

type RemoveHandler struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveHandler) Reset() {
	*x = RemoveHandler{}
	mi := &file_executor_executor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveHandler) ProtoMessage() {}

func (x *RemoveHandler) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveHandler.ProtoReflect.Descriptor instead.
func (*RemoveHandler) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{1}
}

func (x *RemoveHandler) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Execute struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	CorrID        string                          `protobuf:"bytes,1,opt,name=CorrID,proto3" json:"CorrID,omitempty"`
	Name          string                          `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Method        string                          `protobuf:"bytes,3,opt,name=Method,proto3" json:"Method,omitempty"`
	Args          map[string]*proto.EncodedObject `protobuf:"bytes,4,rep,name=Args,proto3" json:"Args,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Execute) Reset() {
	*x = Execute{}
	mi := &file_executor_executor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Execute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execute) ProtoMessage() {}

func (x *Execute) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execute.ProtoReflect.Descriptor instead.
func (*Execute) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{2}
}

func (x *Execute) GetCorrID() string {
	if x != nil {
		return x.CorrID
	}
	return ""
}

func (x *Execute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Execute) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Execute) GetArgs() map[string]*proto.EncodedObject {
	if x != nil {
		return x.Args
	}
	return nil
}

type Exit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Exit) Reset() {
	*x = Exit{}
	mi := &file_executor_executor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exit) ProtoMessage() {}

func (x *Exit) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exit.ProtoReflect.Descriptor instead.
func (*Exit) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{3}
}

type Ready struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ready) Reset() {
	*x = Ready{}
	mi := &file_executor_executor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ready) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ready) ProtoMessage() {}

func (x *Ready) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ready.ProtoReflect.Descriptor instead.
func (*Ready) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{4}
}

type Return struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	CorrID string                 `protobuf:"bytes,1,opt,name=CorrID,proto3" json:"CorrID,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*Return_Value
	//	*Return_Error
	Result        isReturn_Result `protobuf_oneof:"Result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Return) Reset() {
	*x = Return{}
	mi := &file_executor_executor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Return) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Return) ProtoMessage() {}

func (x *Return) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Return.ProtoReflect.Descriptor instead.
func (*Return) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{5}
}

func (x *Return) GetCorrID() string {
	if x != nil {
		return x.CorrID
	}
	return ""
}

func (x *Return) GetResult() isReturn_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Return) GetValue() *proto.EncodedObject {
	if x != nil {
		if x, ok := x.Result.(*Return_Value); ok {
			return x.Value
		}
	}
	return nil
}

func (x *Return) GetError() string {
	if x != nil {
		if x, ok := x.Result.(*Return_Error); ok {
			return x.Error
		}
	}
	return ""
}

type isReturn_Result interface {
	isReturn_Result()
}

type Return_Value struct {
	Value *proto.EncodedObject `protobuf:"bytes,2,opt,name=Value,proto3,oneof"`
}

type Return_Error struct {
	Error string `protobuf:"bytes,3,opt,name=Error,proto3,oneof"`
}

func (*Return_Value) isReturn_Result() {}

func (*Return_Error) isReturn_Result() {}

type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Conn  string                 `protobuf:"bytes,1,opt,name=Conn,proto3" json:"Conn,omitempty"`
	Type  CommandType            `protobuf:"varint,2,opt,name=Type,proto3,enum=executor.CommandType" json:"Type,omitempty"`
	// Types that are valid to be assigned to Command:
	//
	//	*Message_AddHandler
	//	*Message_RemoveHandler
	//	*Message_Execute
	//	*Message_Exit
	//	*Message_Ready
	//	*Message_Return
	//	*Message_StreamChunk
	Command       isMessage_Command `protobuf_oneof:"Command"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_executor_executor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{6}
}

func (x *Message) GetConn() string {
	if x != nil {
		return x.Conn
	}
	return ""
}

func (x *Message) GetType() CommandType {
	if x != nil {
		return x.Type
	}
	return CommandType_UNSPECIFIED
}

func (x *Message) GetCommand() isMessage_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Message) GetAddHandler() *AddHandler {
	if x != nil {
		if x, ok := x.Command.(*Message_AddHandler); ok {
			return x.AddHandler
		}
	}
	return nil
}

func (x *Message) GetRemoveHandler() *RemoveHandler {
	if x != nil {
		if x, ok := x.Command.(*Message_RemoveHandler); ok {
			return x.RemoveHandler
		}
	}
	return nil
}

func (x *Message) GetExecute() *Execute {
	if x != nil {
		if x, ok := x.Command.(*Message_Execute); ok {
			return x.Execute
		}
	}
	return nil
}

func (x *Message) GetExit() *Exit {
	if x != nil {
		if x, ok := x.Command.(*Message_Exit); ok {
			return x.Exit
		}
	}
	return nil
}

func (x *Message) GetReady() *Ready {
	if x != nil {
		if x, ok := x.Command.(*Message_Ready); ok {
			return x.Ready
		}
	}
	return nil
}

func (x *Message) GetReturn() *Return {
	if x != nil {
		if x, ok := x.Command.(*Message_Return); ok {
			return x.Return
		}
	}
	return nil
}

func (x *Message) GetStreamChunk() *proto.StreamChunk {
	if x != nil {
		if x, ok := x.Command.(*Message_StreamChunk); ok {
			return x.StreamChunk
		}
	}
	return nil
}

type isMessage_Command interface {
	isMessage_Command()
}

type Message_AddHandler struct {
	AddHandler *AddHandler `protobuf:"bytes,3,opt,name=AddHandler,proto3,oneof"`
}

type Message_RemoveHandler struct {
	RemoveHandler *RemoveHandler `protobuf:"bytes,4,opt,name=RemoveHandler,proto3,oneof"`
}

type Message_Execute struct {
	Execute *Execute `protobuf:"bytes,5,opt,name=Execute,proto3,oneof"`
}

type Message_Exit struct {
	Exit *Exit `protobuf:"bytes,6,opt,name=Exit,proto3,oneof"`
}

type Message_Ready struct {
	Ready *Ready `protobuf:"bytes,7,opt,name=Ready,proto3,oneof"`
}

type Message_Return struct {
	Return *Return `protobuf:"bytes,8,opt,name=Return,proto3,oneof"`
}

type Message_StreamChunk struct {
	StreamChunk *proto.StreamChunk `protobuf:"bytes,9,opt,name=StreamChunk,proto3,oneof"`
}

func (*Message_AddHandler) isMessage_Command() {}

func (*Message_RemoveHandler) isMessage_Command() {}

func (*Message_Execute) isMessage_Command() {}

func (*Message_Exit) isMessage_Command() {}

func (*Message_Ready) isMessage_Command() {}

func (*Message_Return) isMessage_Command() {}

func (*Message_StreamChunk) isMessage_Command() {}

var File_executor_executor_proto protoreflect.FileDescriptor

const file_executor_executor_proto_rawDesc = "" +
	"\n" +
	"\x17executor/executor.proto\x12\bexecutor\x1a\x0eplatform.proto\"\x81\x01\n" +
	"\n" +
	"AddHandler\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x18\n" +
	"\aHandler\x18\x02 \x01(\fR\aHandler\x12+\n" +
	"\bLanguage\x18\x03 \x01(\x0e2\x0f.proto.LanguageR\bLanguage\x12\x18\n" +
	"\aMethods\x18\x04 \x03(\tR\aMethods\"#\n" +
	"\rRemoveHandler\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\"\xcd\x01\n" +
	"\aExecute\x12\x16\n" +
	"\x06CorrID\x18\x01 \x01(\tR\x06CorrID\x12\x12\n" +
	"\x04Name\x18\x02 \x01(\tR\x04Name\x12\x16\n" +
	"\x06Method\x18\x03 \x01(\tR\x06Method\x12/\n" +
	"\x04Args\x18\x04 \x03(\v2\x1b.executor.Execute.ArgsEntryR\x04Args\x1aM\n" +
	"\tArgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.proto.EncodedObjectR\x05value:\x028\x01\"\x06\n" +
	"\x04Exit\"\a\n" +
	"\x05Ready\"p\n" +
	"\x06Return\x12\x16\n" +
	"\x06CorrID\x18\x01 \x01(\tR\x06CorrID\x12,\n" +
	"\x05Value\x18\x02 \x01(\v2\x14.proto.EncodedObjectH\x00R\x05Value\x12\x16\n" +
	"\x05Error\x18\x03 \x01(\tH\x00R\x05ErrorB\b\n" +
	"\x06Result\"\xae\x03\n" +
	"\aMessage\x12\x12\n" +
	"\x04Conn\x18\x01 \x01(\tR\x04Conn\x12)\n" +
	"\x04Type\x18\x02 \x01(\x0e2\x15.executor.CommandTypeR\x04Type\x126\n" +
	"\n" +
	"AddHandler\x18\x03 \x01(\v2\x14.executor.AddHandlerH\x00R\n" +
	"AddHandler\x12?\n" +
	"\rRemoveHandler\x18\x04 \x01(\v2\x17.executor.RemoveHandlerH\x00R\rRemoveHandler\x12-\n" +
	"\aExecute\x18\x05 \x01(\v2\x11.executor.ExecuteH\x00R\aExecute\x12$\n" +
	"\x04Exit\x18\x06 \x01(\v2\x0e.executor.ExitH\x00R\x04Exit\x12'\n" +
	"\x05Ready\x18\a \x01(\v2\x0f.executor.ReadyH\x00R\x05Ready\x12*\n" +
	"\x06Return\x18\b \x01(\v2\x10.executor.ReturnH\x00R\x06Return\x126\n" +
	"\vStreamChunk\x18\t \x01(\v2\x12.proto.StreamChunkH\x00R\vStreamChunkB\t\n" +
	"\aCommand*\x8f\x01\n" +
	"\vCommandType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x11\n" +
	"\rR_ADD_HANDLER\x10\x01\x12\x14\n" +
	"\x10R_REMOVE_HANDLER\x10\x02\x12\r\n" +
	"\tR_EXECUTE\x10\x03\x12\n" +
	"\n" +
	"\x06R_EXIT\x10\x04\x12\v\n" +
	"\aD_READY\x10\x05\x12\f\n" +
	"\bD_RETURN\x10\x06\x12\x10\n" +
	"\fSTREAM_CHUNK\x10\a2@\n" +
	"\aService\x125\n" +
	"\aSession\x12\x11.executor.Message\x1a\x11.executor.Message\"\x00(\x010\x01B)Z'github.com/9triver/ignis/proto/executorb\x06proto3"

var (
	file_executor_executor_proto_rawDescOnce sync.Once
	file_executor_executor_proto_rawDescData []byte
)

func file_executor_executor_proto_rawDescGZIP() []byte {
	file_executor_executor_proto_rawDescOnce.Do(func() {
		file_executor_executor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_executor_executor_proto_rawDesc), len(file_executor_executor_proto_rawDesc)))
	})
	return file_executor_executor_proto_rawDescData
}

var file_executor_executor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_executor_executor_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_executor_executor_proto_goTypes = []any{
	(CommandType)(0),            // 0: executor.CommandType
	(*AddHandler)(nil),          // 1: executor.AddHandler
	(*RemoveHandler)(nil),       // 2: executor.RemoveHandler
	(*Execute)(nil),             // 3: executor.Execute
	(*Exit)(nil),                // 4: executor.Exit
	(*Ready)(nil),               // 5: executor.Ready
	(*Return)(nil),              // 6: executor.Return
	(*Message)(nil),             // 7: executor.Message
	nil,                         // 8: executor.Execute.ArgsEntry
	(proto.Language)(0),         // 9: proto.Language
	(*proto.EncodedObject)(nil), // 10: proto.EncodedObject
	(*proto.StreamChunk)(nil),   // 11: proto.StreamChunk
}
var file_executor_executor_proto_depIdxs = []int32{
	9,  // 0: executor.AddHandler.Language:type_name -> proto.Language
	8,  // 1: executor.Execute.Args:type_name -> executor.Execute.ArgsEntry
	10, // 2: executor.Return.Value:type_name -> proto.EncodedObject
	0,  // 3: executor.Message.Type:type_name -> executor.CommandType
	1,  // 4: executor.Message.AddHandler:type_name -> executor.AddHandler
	2,  // 5: executor.Message.RemoveHandler:type_name -> executor.RemoveHandler
	3,  // 6: executor.Message.Execute:type_name -> executor.Execute
	4,  // 7: executor.Message.Exit:type_name -> executor.Exit
	5,  // 8: executor.Message.Ready:type_name -> executor.Ready
	6,  // 9: executor.Message.Return:type_name -> executor.Return
	11, // 10: executor.Message.StreamChunk:type_name -> proto.StreamChunk
	10, // 11: executor.Execute.ArgsEntry.value:type_name -> proto.EncodedObject
	7,  // 12: executor.Service.Session:input_type -> executor.Message
	7,  // 13: executor.Service.Session:output_type -> executor.Message
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_executor_executor_proto_init() }
func file_executor_executor_proto_init() {
	if File_executor_executor_proto != nil {
		return
	}
	file_executor_executor_proto_msgTypes[5].OneofWrappers = []any{
		(*Return_Value)(nil),
		(*Return_Error)(nil),
	}
	file_executor_executor_proto_msgTypes[6].OneofWrappers = []any{
		(*Message_AddHandler)(nil),
		(*Message_RemoveHandler)(nil),
		(*Message_Execute)(nil),
		(*Message_Exit)(nil),
		(*Message_Ready)(nil),
		(*Message_Return)(nil),
		(*Message_StreamChunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_executor_executor_proto_rawDesc), len(file_executor_executor_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_executor_executor_proto_goTypes,
		DependencyIndexes: file_executor_executor_proto_depIdxs,
		EnumInfos:         file_executor_executor_proto_enumTypes,
		MessageInfos:      file_executor_executor_proto_msgTypes,
	}.Build()
	File_executor_executor_proto = out.File
	file_executor_executor_proto_goTypes = nil
	file_executor_executor_proto_depIdxs = nil
}
