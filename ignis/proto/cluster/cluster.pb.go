// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.0
// source: cluster/cluster.proto

package cluster

import (
	proto "github.com/9triver/ignis/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_UNSPECIFIED     MessageType = 0
	MessageType_OBJECT_REQUEST  MessageType = 1
	MessageType_OBJECT_RESPONSE MessageType = 2
	MessageType_STREAM_CHUNK    MessageType = 3
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "OBJECT_REQUEST",
		2: "OBJECT_RESPONSE",
		3: "STREAM_CHUNK",
	}
	MessageType_value = map[string]int32{
		"UNSPECIFIED":     0,
		"OBJECT_REQUEST":  1,
		"OBJECT_RESPONSE": 2,
		"STREAM_CHUNK":    3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_cluster_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_cluster_cluster_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_cluster_cluster_proto_rawDescGZIP(), []int{0}
}

// ObjectRequest requests object with ID, and the object is sent to ReplyTo, asynchronously.
// if the object is a stream, the stream **object** is sent to ReplyTo by ObjectRequest,
// but no real stream chunk is transmitted.
type ObjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ReplyTo       *proto.StoreRef        `protobuf:"bytes,2,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectRequest) Reset() {
	*x = ObjectRequest{}
	mi := &file_cluster_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectRequest) ProtoMessage() {}

func (x *ObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectRequest.ProtoReflect.Descriptor instead.
func (*ObjectRequest) Descriptor() ([]byte, []int) {
	return file_cluster_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ObjectRequest) GetReplyTo() *proto.StoreRef {
	if x != nil {
		return x.ReplyTo
	}
	return nil
}

type ObjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Value         *proto.EncodedObject   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectResponse) Reset() {
	*x = ObjectResponse{}
	mi := &file_cluster_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectResponse) ProtoMessage() {}

func (x *ObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectResponse.ProtoReflect.Descriptor instead.
func (*ObjectResponse) Descriptor() ([]byte, []int) {
	return file_cluster_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *ObjectResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ObjectResponse) GetValue() *proto.EncodedObject {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ObjectResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Envelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Store *proto.StoreRef        `protobuf:"bytes,1,opt,name=Store,proto3" json:"Store,omitempty"`
	Type  MessageType            `protobuf:"varint,2,opt,name=Type,proto3,enum=proto.MessageType" json:"Type,omitempty"`
	// Types that are valid to be assigned to Message:
	//
	//	*Envelope_ObjectRequest
	//	*Envelope_ObjectResponse
	//	*Envelope_StreamChunk
	Message       isEnvelope_Message `protobuf_oneof:"Message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_cluster_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_cluster_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *Envelope) GetStore() *proto.StoreRef {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *Envelope) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_UNSPECIFIED
}

func (x *Envelope) GetMessage() isEnvelope_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Envelope) GetObjectRequest() *ObjectRequest {
	if x != nil {
		if x, ok := x.Message.(*Envelope_ObjectRequest); ok {
			return x.ObjectRequest
		}
	}
	return nil
}

func (x *Envelope) GetObjectResponse() *ObjectResponse {
	if x != nil {
		if x, ok := x.Message.(*Envelope_ObjectResponse); ok {
			return x.ObjectResponse
		}
	}
	return nil
}

func (x *Envelope) GetStreamChunk() *proto.StreamChunk {
	if x != nil {
		if x, ok := x.Message.(*Envelope_StreamChunk); ok {
			return x.StreamChunk
		}
	}
	return nil
}

type isEnvelope_Message interface {
	isEnvelope_Message()
}

type Envelope_ObjectRequest struct {
	ObjectRequest *ObjectRequest `protobuf:"bytes,3,opt,name=ObjectRequest,proto3,oneof"`
}

type Envelope_ObjectResponse struct {
	ObjectResponse *ObjectResponse `protobuf:"bytes,4,opt,name=ObjectResponse,proto3,oneof"`
}

type Envelope_StreamChunk struct {
	StreamChunk *proto.StreamChunk `protobuf:"bytes,5,opt,name=StreamChunk,proto3,oneof"`
}

func (*Envelope_ObjectRequest) isEnvelope_Message() {}

func (*Envelope_ObjectResponse) isEnvelope_Message() {}

func (*Envelope_StreamChunk) isEnvelope_Message() {}

var File_cluster_cluster_proto protoreflect.FileDescriptor

const file_cluster_cluster_proto_rawDesc = "" +
	"\n" +
	"\x15cluster/cluster.proto\x12\x05proto\x1a\x0eplatform.proto\"J\n" +
	"\rObjectRequest\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12)\n" +
	"\aReplyTo\x18\x02 \x01(\v2\x0f.proto.StoreRefR\aReplyTo\"b\n" +
	"\x0eObjectResponse\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12*\n" +
	"\x05Value\x18\x02 \x01(\v2\x14.proto.EncodedObjectR\x05Value\x12\x14\n" +
	"\x05Error\x18\x03 \x01(\tR\x05Error\"\x9b\x02\n" +
	"\bEnvelope\x12%\n" +
	"\x05Store\x18\x01 \x01(\v2\x0f.proto.StoreRefR\x05Store\x12&\n" +
	"\x04Type\x18\x02 \x01(\x0e2\x12.proto.MessageTypeR\x04Type\x12<\n" +
	"\rObjectRequest\x18\x03 \x01(\v2\x14.proto.ObjectRequestH\x00R\rObjectRequest\x12?\n" +
	"\x0eObjectResponse\x18\x04 \x01(\v2\x15.proto.ObjectResponseH\x00R\x0eObjectResponse\x126\n" +
	"\vStreamChunk\x18\x05 \x01(\v2\x12.proto.StreamChunkH\x00R\vStreamChunkB\t\n" +
	"\aMessage*Y\n" +
	"\vMessageType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eOBJECT_REQUEST\x10\x01\x12\x13\n" +
	"\x0fOBJECT_RESPONSE\x10\x02\x12\x10\n" +
	"\fSTREAM_CHUNK\x10\x03B(Z&github.com/9triver/ignis/proto/clusterb\x06proto3"

var (
	file_cluster_cluster_proto_rawDescOnce sync.Once
	file_cluster_cluster_proto_rawDescData []byte
)

func file_cluster_cluster_proto_rawDescGZIP() []byte {
	file_cluster_cluster_proto_rawDescOnce.Do(func() {
		file_cluster_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cluster_cluster_proto_rawDesc), len(file_cluster_cluster_proto_rawDesc)))
	})
	return file_cluster_cluster_proto_rawDescData
}

var file_cluster_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cluster_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cluster_cluster_proto_goTypes = []any{
	(MessageType)(0),            // 0: proto.MessageType
	(*ObjectRequest)(nil),       // 1: proto.ObjectRequest
	(*ObjectResponse)(nil),      // 2: proto.ObjectResponse
	(*Envelope)(nil),            // 3: proto.Envelope
	(*proto.StoreRef)(nil),      // 4: proto.StoreRef
	(*proto.EncodedObject)(nil), // 5: proto.EncodedObject
	(*proto.StreamChunk)(nil),   // 6: proto.StreamChunk
}
var file_cluster_cluster_proto_depIdxs = []int32{
	4, // 0: proto.ObjectRequest.ReplyTo:type_name -> proto.StoreRef
	5, // 1: proto.ObjectResponse.Value:type_name -> proto.EncodedObject
	4, // 2: proto.Envelope.Store:type_name -> proto.StoreRef
	0, // 3: proto.Envelope.Type:type_name -> proto.MessageType
	1, // 4: proto.Envelope.ObjectRequest:type_name -> proto.ObjectRequest
	2, // 5: proto.Envelope.ObjectResponse:type_name -> proto.ObjectResponse
	6, // 6: proto.Envelope.StreamChunk:type_name -> proto.StreamChunk
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_cluster_cluster_proto_init() }
func file_cluster_cluster_proto_init() {
	if File_cluster_cluster_proto != nil {
		return
	}
	file_cluster_cluster_proto_msgTypes[2].OneofWrappers = []any{
		(*Envelope_ObjectRequest)(nil),
		(*Envelope_ObjectResponse)(nil),
		(*Envelope_StreamChunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cluster_cluster_proto_rawDesc), len(file_cluster_cluster_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cluster_cluster_proto_goTypes,
		DependencyIndexes: file_cluster_cluster_proto_depIdxs,
		EnumInfos:         file_cluster_cluster_proto_enumTypes,
		MessageInfos:      file_cluster_cluster_proto_msgTypes,
	}.Build()
	File_cluster_cluster_proto = out.File
	file_cluster_cluster_proto_goTypes = nil
	file_cluster_cluster_proto_depIdxs = nil
}
