// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.0
// source: controller/controller.proto

package controller

import (
	proto "github.com/9triver/ignis/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandType int32

const (
	CommandType_UNSPECIFIED         CommandType = 0 // unknown command type
	CommandType_ACK                 CommandType = 1 // acknowledged
	CommandType_FR_READY            CommandType = 2
	CommandType_FR_APPEND_DATA      CommandType = 3 // frontend: append data node
	CommandType_FR_APPEND_ACTOR     CommandType = 4 // front: append actor (for debugging purpose)
	CommandType_FR_APPEND_PY_FUNC   CommandType = 5 // frontend: append python function (control node definition)
	CommandType_FR_APPEND_ARG       CommandType = 6 // frontend: append function arg to specified actor
	CommandType_BK_RETURN_RESULT    CommandType = 7 // backend: send back execution result
	CommandType_FR_REGISTER_REQUEST CommandType = 8 // backend: register application
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ACK",
		2: "FR_READY",
		3: "FR_APPEND_DATA",
		4: "FR_APPEND_ACTOR",
		5: "FR_APPEND_PY_FUNC",
		6: "FR_APPEND_ARG",
		7: "BK_RETURN_RESULT",
		8: "FR_REGISTER_REQUEST",
	}
	CommandType_value = map[string]int32{
		"UNSPECIFIED":         0,
		"ACK":                 1,
		"FR_READY":            2,
		"FR_APPEND_DATA":      3,
		"FR_APPEND_ACTOR":     4,
		"FR_APPEND_PY_FUNC":   5,
		"FR_APPEND_ARG":       6,
		"BK_RETURN_RESULT":    7,
		"FR_REGISTER_REQUEST": 8,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_controller_controller_proto_enumTypes[0].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_controller_controller_proto_enumTypes[0]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{0}
}

type Data_ObjectType int32

const (
	Data_OBJ_UNSPECIFIED Data_ObjectType = 0
	Data_OBJ_REF         Data_ObjectType = 1
	Data_OBJ_ENCODED     Data_ObjectType = 2
	Data_OBJ_STREAM      Data_ObjectType = 3
)

// Enum value maps for Data_ObjectType.
var (
	Data_ObjectType_name = map[int32]string{
		0: "OBJ_UNSPECIFIED",
		1: "OBJ_REF",
		2: "OBJ_ENCODED",
		3: "OBJ_STREAM",
	}
	Data_ObjectType_value = map[string]int32{
		"OBJ_UNSPECIFIED": 0,
		"OBJ_REF":         1,
		"OBJ_ENCODED":     2,
		"OBJ_STREAM":      3,
	}
)

func (x Data_ObjectType) Enum() *Data_ObjectType {
	p := new(Data_ObjectType)
	*p = x
	return p
}

func (x Data_ObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Data_ObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_controller_controller_proto_enumTypes[1].Descriptor()
}

func (Data_ObjectType) Type() protoreflect.EnumType {
	return &file_controller_controller_proto_enumTypes[1]
}

func (x Data_ObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Data_ObjectType.Descriptor instead.
func (Data_ObjectType) EnumDescriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{2, 0}
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         string                 `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_controller_controller_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{0}
}

func (x *Ack) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Ready struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ready) Reset() {
	*x = Ready{}
	mi := &file_controller_controller_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ready) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ready) ProtoMessage() {}

func (x *Ready) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ready.ProtoReflect.Descriptor instead.
func (*Ready) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{1}
}

type Data struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  Data_ObjectType        `protobuf:"varint,1,opt,name=Type,proto3,enum=controller.Data_ObjectType" json:"Type,omitempty"`
	// Types that are valid to be assigned to Object:
	//
	//	*Data_Ref
	//	*Data_Encoded
	Object        isData_Object `protobuf_oneof:"Object"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_controller_controller_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{2}
}

func (x *Data) GetType() Data_ObjectType {
	if x != nil {
		return x.Type
	}
	return Data_OBJ_UNSPECIFIED
}

func (x *Data) GetObject() isData_Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *Data) GetRef() *proto.Flow {
	if x != nil {
		if x, ok := x.Object.(*Data_Ref); ok {
			return x.Ref
		}
	}
	return nil
}

func (x *Data) GetEncoded() *proto.EncodedObject {
	if x != nil {
		if x, ok := x.Object.(*Data_Encoded); ok {
			return x.Encoded
		}
	}
	return nil
}

type isData_Object interface {
	isData_Object()
}

type Data_Ref struct {
	Ref *proto.Flow `protobuf:"bytes,2,opt,name=Ref,proto3,oneof"`
}

type Data_Encoded struct {
	Encoded *proto.EncodedObject `protobuf:"bytes,3,opt,name=Encoded,proto3,oneof"`
}

func (*Data_Ref) isData_Object() {}

func (*Data_Encoded) isData_Object() {}

type AppendData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"` // current execution session, empty if shared by all sessions
	Object        *proto.EncodedObject   `protobuf:"bytes,2,opt,name=Object,proto3" json:"Object,omitempty"`       // encoded object
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendData) Reset() {
	*x = AppendData{}
	mi := &file_controller_controller_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendData) ProtoMessage() {}

func (x *AppendData) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendData.ProtoReflect.Descriptor instead.
func (*AppendData) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{3}
}

func (x *AppendData) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *AppendData) GetObject() *proto.EncodedObject {
	if x != nil {
		return x.Object
	}
	return nil
}

type AppendActor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`     // actor name
	Params        []string               `protobuf:"bytes,2,rep,name=Params,proto3" json:"Params,omitempty"` // function params
	Ref           *proto.ActorRef        `protobuf:"bytes,3,opt,name=Ref,proto3" json:"Ref,omitempty"`       // Ref to actor
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendActor) Reset() {
	*x = AppendActor{}
	mi := &file_controller_controller_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendActor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendActor) ProtoMessage() {}

func (x *AppendActor) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendActor.ProtoReflect.Descriptor instead.
func (*AppendActor) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{4}
}

func (x *AppendActor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppendActor) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *AppendActor) GetRef() *proto.ActorRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type AppendPyFunc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                              // function name
	Params        []string               `protobuf:"bytes,2,rep,name=Params,proto3" json:"Params,omitempty"`                          //function params
	Venv          string                 `protobuf:"bytes,3,opt,name=Venv,proto3" json:"Venv,omitempty"`                              // function virtual environment
	Requirements  []string               `protobuf:"bytes,4,rep,name=Requirements,proto3" json:"Requirements,omitempty"`              // function dependencies
	PickledObject []byte                 `protobuf:"bytes,5,opt,name=PickledObject,proto3" json:"PickledObject,omitempty"`            // encoded function impl
	Language      proto.Language         `protobuf:"varint,6,opt,name=Language,proto3,enum=proto.Language" json:"Language,omitempty"` // return type of function
	// TODO: Resources
	Replicas      int32 `protobuf:"varint,7,opt,name=Replicas,proto3" json:"Replicas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendPyFunc) Reset() {
	*x = AppendPyFunc{}
	mi := &file_controller_controller_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendPyFunc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendPyFunc) ProtoMessage() {}

func (x *AppendPyFunc) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendPyFunc.ProtoReflect.Descriptor instead.
func (*AppendPyFunc) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{5}
}

func (x *AppendPyFunc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppendPyFunc) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *AppendPyFunc) GetVenv() string {
	if x != nil {
		return x.Venv
	}
	return ""
}

func (x *AppendPyFunc) GetRequirements() []string {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *AppendPyFunc) GetPickledObject() []byte {
	if x != nil {
		return x.PickledObject
	}
	return nil
}

func (x *AppendPyFunc) GetLanguage() proto.Language {
	if x != nil {
		return x.Language
	}
	return proto.Language(0)
}

func (x *AppendPyFunc) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

type AppendArg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`   // current execution session
	InstanceID    string                 `protobuf:"bytes,2,opt,name=InstanceID,proto3" json:"InstanceID,omitempty"` // id of function instance under current execution session
	Name          string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`             // function name
	Param         string                 `protobuf:"bytes,4,opt,name=Param,proto3" json:"Param,omitempty"`           // param name
	Value         *Data                  `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`           // object ref for param
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendArg) Reset() {
	*x = AppendArg{}
	mi := &file_controller_controller_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendArg) ProtoMessage() {}

func (x *AppendArg) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendArg.ProtoReflect.Descriptor instead.
func (*AppendArg) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{6}
}

func (x *AppendArg) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *AppendArg) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *AppendArg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppendArg) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *AppendArg) GetValue() *Data {
	if x != nil {
		return x.Value
	}
	return nil
}

type ReturnResult struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	SessionID  string                 `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`   // current execution session
	InstanceID string                 `protobuf:"bytes,2,opt,name=InstanceID,proto3" json:"InstanceID,omitempty"` // id of function instance under current execution session
	Name       string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`             // function name
	// Types that are valid to be assigned to Result:
	//
	//	*ReturnResult_Value
	//	*ReturnResult_Error
	Result        isReturnResult_Result `protobuf_oneof:"Result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReturnResult) Reset() {
	*x = ReturnResult{}
	mi := &file_controller_controller_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnResult) ProtoMessage() {}

func (x *ReturnResult) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnResult.ProtoReflect.Descriptor instead.
func (*ReturnResult) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{7}
}

func (x *ReturnResult) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *ReturnResult) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *ReturnResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReturnResult) GetResult() isReturnResult_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ReturnResult) GetValue() *Data {
	if x != nil {
		if x, ok := x.Result.(*ReturnResult_Value); ok {
			return x.Value
		}
	}
	return nil
}

func (x *ReturnResult) GetError() string {
	if x != nil {
		if x, ok := x.Result.(*ReturnResult_Error); ok {
			return x.Error
		}
	}
	return ""
}

type isReturnResult_Result interface {
	isReturnResult_Result()
}

type ReturnResult_Value struct {
	Value *Data `protobuf:"bytes,4,opt,name=Value,proto3,oneof"` // success: return result
}

type ReturnResult_Error struct {
	Error string `protobuf:"bytes,5,opt,name=Error,proto3,oneof"` // fail: return error
}

func (*ReturnResult_Value) isReturnResult_Result() {}

func (*ReturnResult_Error) isReturnResult_Result() {}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApplicationID string                 `protobuf:"bytes,1,opt,name=ApplicationID,proto3" json:"ApplicationID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_controller_controller_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterRequest) GetApplicationID() string {
	if x != nil {
		return x.ApplicationID
	}
	return ""
}

type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  CommandType            `protobuf:"varint,1,opt,name=Type,proto3,enum=controller.CommandType" json:"Type,omitempty"`
	// Types that are valid to be assigned to Command:
	//
	//	*Message_Ack
	//	*Message_Ready
	//	*Message_AppendData
	//	*Message_AppendActor
	//	*Message_AppendPyFunc
	//	*Message_AppendArg
	//	*Message_ReturnResult
	//	*Message_RegisterRequest
	Command       isMessage_Command `protobuf_oneof:"Command"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_controller_controller_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_controller_controller_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_controller_controller_proto_rawDescGZIP(), []int{9}
}

func (x *Message) GetType() CommandType {
	if x != nil {
		return x.Type
	}
	return CommandType_UNSPECIFIED
}

func (x *Message) GetCommand() isMessage_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Message) GetAck() *Ack {
	if x != nil {
		if x, ok := x.Command.(*Message_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *Message) GetReady() *Ready {
	if x != nil {
		if x, ok := x.Command.(*Message_Ready); ok {
			return x.Ready
		}
	}
	return nil
}

func (x *Message) GetAppendData() *AppendData {
	if x != nil {
		if x, ok := x.Command.(*Message_AppendData); ok {
			return x.AppendData
		}
	}
	return nil
}

func (x *Message) GetAppendActor() *AppendActor {
	if x != nil {
		if x, ok := x.Command.(*Message_AppendActor); ok {
			return x.AppendActor
		}
	}
	return nil
}

func (x *Message) GetAppendPyFunc() *AppendPyFunc {
	if x != nil {
		if x, ok := x.Command.(*Message_AppendPyFunc); ok {
			return x.AppendPyFunc
		}
	}
	return nil
}

func (x *Message) GetAppendArg() *AppendArg {
	if x != nil {
		if x, ok := x.Command.(*Message_AppendArg); ok {
			return x.AppendArg
		}
	}
	return nil
}

func (x *Message) GetReturnResult() *ReturnResult {
	if x != nil {
		if x, ok := x.Command.(*Message_ReturnResult); ok {
			return x.ReturnResult
		}
	}
	return nil
}

func (x *Message) GetRegisterRequest() *RegisterRequest {
	if x != nil {
		if x, ok := x.Command.(*Message_RegisterRequest); ok {
			return x.RegisterRequest
		}
	}
	return nil
}

type isMessage_Command interface {
	isMessage_Command()
}

type Message_Ack struct {
	Ack *Ack `protobuf:"bytes,2,opt,name=Ack,proto3,oneof"`
}

type Message_Ready struct {
	Ready *Ready `protobuf:"bytes,3,opt,name=Ready,proto3,oneof"`
}

type Message_AppendData struct {
	AppendData *AppendData `protobuf:"bytes,4,opt,name=AppendData,proto3,oneof"`
}

type Message_AppendActor struct {
	AppendActor *AppendActor `protobuf:"bytes,5,opt,name=AppendActor,proto3,oneof"`
}

type Message_AppendPyFunc struct {
	AppendPyFunc *AppendPyFunc `protobuf:"bytes,6,opt,name=AppendPyFunc,proto3,oneof"`
}

type Message_AppendArg struct {
	AppendArg *AppendArg `protobuf:"bytes,7,opt,name=AppendArg,proto3,oneof"`
}

type Message_ReturnResult struct {
	ReturnResult *ReturnResult `protobuf:"bytes,8,opt,name=ReturnResult,proto3,oneof"`
}

type Message_RegisterRequest struct {
	RegisterRequest *RegisterRequest `protobuf:"bytes,9,opt,name=RegisterRequest,proto3,oneof"`
}

func (*Message_Ack) isMessage_Command() {}

func (*Message_Ready) isMessage_Command() {}

func (*Message_AppendData) isMessage_Command() {}

func (*Message_AppendActor) isMessage_Command() {}

func (*Message_AppendPyFunc) isMessage_Command() {}

func (*Message_AppendArg) isMessage_Command() {}

func (*Message_ReturnResult) isMessage_Command() {}

func (*Message_RegisterRequest) isMessage_Command() {}

var File_controller_controller_proto protoreflect.FileDescriptor

const file_controller_controller_proto_rawDesc = "" +
	"\n" +
	"\x1bcontroller/controller.proto\x12\n" +
	"controller\x1a\x0eplatform.proto\"\x1b\n" +
	"\x03Ack\x12\x14\n" +
	"\x05Error\x18\x01 \x01(\tR\x05Error\"\a\n" +
	"\x05Ready\"\xe5\x01\n" +
	"\x04Data\x12/\n" +
	"\x04Type\x18\x01 \x01(\x0e2\x1b.controller.Data.ObjectTypeR\x04Type\x12\x1f\n" +
	"\x03Ref\x18\x02 \x01(\v2\v.proto.FlowH\x00R\x03Ref\x120\n" +
	"\aEncoded\x18\x03 \x01(\v2\x14.proto.EncodedObjectH\x00R\aEncoded\"O\n" +
	"\n" +
	"ObjectType\x12\x13\n" +
	"\x0fOBJ_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aOBJ_REF\x10\x01\x12\x0f\n" +
	"\vOBJ_ENCODED\x10\x02\x12\x0e\n" +
	"\n" +
	"OBJ_STREAM\x10\x03B\b\n" +
	"\x06Object\"X\n" +
	"\n" +
	"AppendData\x12\x1c\n" +
	"\tSessionID\x18\x01 \x01(\tR\tSessionID\x12,\n" +
	"\x06Object\x18\x02 \x01(\v2\x14.proto.EncodedObjectR\x06Object\"\\\n" +
	"\vAppendActor\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x16\n" +
	"\x06Params\x18\x02 \x03(\tR\x06Params\x12!\n" +
	"\x03Ref\x18\x03 \x01(\v2\x0f.proto.ActorRefR\x03Ref\"\xe1\x01\n" +
	"\fAppendPyFunc\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x16\n" +
	"\x06Params\x18\x02 \x03(\tR\x06Params\x12\x12\n" +
	"\x04Venv\x18\x03 \x01(\tR\x04Venv\x12\"\n" +
	"\fRequirements\x18\x04 \x03(\tR\fRequirements\x12$\n" +
	"\rPickledObject\x18\x05 \x01(\fR\rPickledObject\x12+\n" +
	"\bLanguage\x18\x06 \x01(\x0e2\x0f.proto.LanguageR\bLanguage\x12\x1a\n" +
	"\bReplicas\x18\a \x01(\x05R\bReplicas\"\x9b\x01\n" +
	"\tAppendArg\x12\x1c\n" +
	"\tSessionID\x18\x01 \x01(\tR\tSessionID\x12\x1e\n" +
	"\n" +
	"InstanceID\x18\x02 \x01(\tR\n" +
	"InstanceID\x12\x12\n" +
	"\x04Name\x18\x03 \x01(\tR\x04Name\x12\x14\n" +
	"\x05Param\x18\x04 \x01(\tR\x05Param\x12&\n" +
	"\x05Value\x18\x05 \x01(\v2\x10.controller.DataR\x05Value\"\xac\x01\n" +
	"\fReturnResult\x12\x1c\n" +
	"\tSessionID\x18\x01 \x01(\tR\tSessionID\x12\x1e\n" +
	"\n" +
	"InstanceID\x18\x02 \x01(\tR\n" +
	"InstanceID\x12\x12\n" +
	"\x04Name\x18\x03 \x01(\tR\x04Name\x12(\n" +
	"\x05Value\x18\x04 \x01(\v2\x10.controller.DataH\x00R\x05Value\x12\x16\n" +
	"\x05Error\x18\x05 \x01(\tH\x00R\x05ErrorB\b\n" +
	"\x06Result\"7\n" +
	"\x0fRegisterRequest\x12$\n" +
	"\rApplicationID\x18\x01 \x01(\tR\rApplicationID\"\x88\x04\n" +
	"\aMessage\x12+\n" +
	"\x04Type\x18\x01 \x01(\x0e2\x17.controller.CommandTypeR\x04Type\x12#\n" +
	"\x03Ack\x18\x02 \x01(\v2\x0f.controller.AckH\x00R\x03Ack\x12)\n" +
	"\x05Ready\x18\x03 \x01(\v2\x11.controller.ReadyH\x00R\x05Ready\x128\n" +
	"\n" +
	"AppendData\x18\x04 \x01(\v2\x16.controller.AppendDataH\x00R\n" +
	"AppendData\x12;\n" +
	"\vAppendActor\x18\x05 \x01(\v2\x17.controller.AppendActorH\x00R\vAppendActor\x12>\n" +
	"\fAppendPyFunc\x18\x06 \x01(\v2\x18.controller.AppendPyFuncH\x00R\fAppendPyFunc\x125\n" +
	"\tAppendArg\x18\a \x01(\v2\x15.controller.AppendArgH\x00R\tAppendArg\x12>\n" +
	"\fReturnResult\x18\b \x01(\v2\x18.controller.ReturnResultH\x00R\fReturnResult\x12G\n" +
	"\x0fRegisterRequest\x18\t \x01(\v2\x1b.controller.RegisterRequestH\x00R\x0fRegisterRequestB\t\n" +
	"\aCommand*\xb7\x01\n" +
	"\vCommandType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\a\n" +
	"\x03ACK\x10\x01\x12\f\n" +
	"\bFR_READY\x10\x02\x12\x12\n" +
	"\x0eFR_APPEND_DATA\x10\x03\x12\x13\n" +
	"\x0fFR_APPEND_ACTOR\x10\x04\x12\x15\n" +
	"\x11FR_APPEND_PY_FUNC\x10\x05\x12\x11\n" +
	"\rFR_APPEND_ARG\x10\x06\x12\x14\n" +
	"\x10BK_RETURN_RESULT\x10\a\x12\x17\n" +
	"\x13FR_REGISTER_REQUEST\x10\b2D\n" +
	"\aService\x129\n" +
	"\aSession\x12\x13.controller.Message\x1a\x13.controller.Message\"\x00(\x010\x01B+Z)github.com/9triver/ignis/proto/controllerb\x06proto3"

var (
	file_controller_controller_proto_rawDescOnce sync.Once
	file_controller_controller_proto_rawDescData []byte
)

func file_controller_controller_proto_rawDescGZIP() []byte {
	file_controller_controller_proto_rawDescOnce.Do(func() {
		file_controller_controller_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_controller_controller_proto_rawDesc), len(file_controller_controller_proto_rawDesc)))
	})
	return file_controller_controller_proto_rawDescData
}

var file_controller_controller_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_controller_controller_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_controller_controller_proto_goTypes = []any{
	(CommandType)(0),            // 0: controller.CommandType
	(Data_ObjectType)(0),        // 1: controller.Data.ObjectType
	(*Ack)(nil),                 // 2: controller.Ack
	(*Ready)(nil),               // 3: controller.Ready
	(*Data)(nil),                // 4: controller.Data
	(*AppendData)(nil),          // 5: controller.AppendData
	(*AppendActor)(nil),         // 6: controller.AppendActor
	(*AppendPyFunc)(nil),        // 7: controller.AppendPyFunc
	(*AppendArg)(nil),           // 8: controller.AppendArg
	(*ReturnResult)(nil),        // 9: controller.ReturnResult
	(*RegisterRequest)(nil),     // 10: controller.RegisterRequest
	(*Message)(nil),             // 11: controller.Message
	(*proto.Flow)(nil),          // 12: proto.Flow
	(*proto.EncodedObject)(nil), // 13: proto.EncodedObject
	(*proto.ActorRef)(nil),      // 14: proto.ActorRef
	(proto.Language)(0),         // 15: proto.Language
}
var file_controller_controller_proto_depIdxs = []int32{
	1,  // 0: controller.Data.Type:type_name -> controller.Data.ObjectType
	12, // 1: controller.Data.Ref:type_name -> proto.Flow
	13, // 2: controller.Data.Encoded:type_name -> proto.EncodedObject
	13, // 3: controller.AppendData.Object:type_name -> proto.EncodedObject
	14, // 4: controller.AppendActor.Ref:type_name -> proto.ActorRef
	15, // 5: controller.AppendPyFunc.Language:type_name -> proto.Language
	4,  // 6: controller.AppendArg.Value:type_name -> controller.Data
	4,  // 7: controller.ReturnResult.Value:type_name -> controller.Data
	0,  // 8: controller.Message.Type:type_name -> controller.CommandType
	2,  // 9: controller.Message.Ack:type_name -> controller.Ack
	3,  // 10: controller.Message.Ready:type_name -> controller.Ready
	5,  // 11: controller.Message.AppendData:type_name -> controller.AppendData
	6,  // 12: controller.Message.AppendActor:type_name -> controller.AppendActor
	7,  // 13: controller.Message.AppendPyFunc:type_name -> controller.AppendPyFunc
	8,  // 14: controller.Message.AppendArg:type_name -> controller.AppendArg
	9,  // 15: controller.Message.ReturnResult:type_name -> controller.ReturnResult
	10, // 16: controller.Message.RegisterRequest:type_name -> controller.RegisterRequest
	11, // 17: controller.Service.Session:input_type -> controller.Message
	11, // 18: controller.Service.Session:output_type -> controller.Message
	18, // [18:19] is the sub-list for method output_type
	17, // [17:18] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_controller_controller_proto_init() }
func file_controller_controller_proto_init() {
	if File_controller_controller_proto != nil {
		return
	}
	file_controller_controller_proto_msgTypes[2].OneofWrappers = []any{
		(*Data_Ref)(nil),
		(*Data_Encoded)(nil),
	}
	file_controller_controller_proto_msgTypes[7].OneofWrappers = []any{
		(*ReturnResult_Value)(nil),
		(*ReturnResult_Error)(nil),
	}
	file_controller_controller_proto_msgTypes[9].OneofWrappers = []any{
		(*Message_Ack)(nil),
		(*Message_Ready)(nil),
		(*Message_AppendData)(nil),
		(*Message_AppendActor)(nil),
		(*Message_AppendPyFunc)(nil),
		(*Message_AppendArg)(nil),
		(*Message_ReturnResult)(nil),
		(*Message_RegisterRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_controller_controller_proto_rawDesc), len(file_controller_controller_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_controller_controller_proto_goTypes,
		DependencyIndexes: file_controller_controller_proto_depIdxs,
		EnumInfos:         file_controller_controller_proto_enumTypes,
		MessageInfos:      file_controller_controller_proto_msgTypes,
	}.Build()
	File_controller_controller_proto = out.File
	file_controller_controller_proto_goTypes = nil
	file_controller_controller_proto_depIdxs = nil
}
