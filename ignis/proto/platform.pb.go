// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.0
// source: platform.proto

package proto

import (
	actor "github.com/asynkron/protoactor-go/actor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Language of supported object
type Language int32

const (
	Language_LANG_UNKNOWN Language = 0
	Language_LANG_JSON    Language = 1 // Values that can be represented as JSON string, can be encoded/decoded
	Language_LANG_GO      Language = 2 // Values that are only compatible with Go actors.
	Language_LANG_PYTHON  Language = 3 // Values that are only compatible with Python actors.
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "LANG_UNKNOWN",
		1: "LANG_JSON",
		2: "LANG_GO",
		3: "LANG_PYTHON",
	}
	Language_value = map[string]int32{
		"LANG_UNKNOWN": 0,
		"LANG_JSON":    1,
		"LANG_GO":      2,
		"LANG_PYTHON":  3,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_platform_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_platform_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0}
}

type StoreRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PID           *actor.PID             `protobuf:"bytes,2,opt,name=PID,proto3" json:"PID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreRef) Reset() {
	*x = StoreRef{}
	mi := &file_platform_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRef) ProtoMessage() {}

func (x *StoreRef) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRef.ProtoReflect.Descriptor instead.
func (*StoreRef) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{0}
}

func (x *StoreRef) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *StoreRef) GetPID() *actor.PID {
	if x != nil {
		return x.PID
	}
	return nil
}

type ActorRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Store         *StoreRef              `protobuf:"bytes,1,opt,name=Store,proto3" json:"Store,omitempty"`
	ID            string                 `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	PID           *actor.PID             `protobuf:"bytes,3,opt,name=PID,proto3" json:"PID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActorRef) Reset() {
	*x = ActorRef{}
	mi := &file_platform_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActorRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorRef) ProtoMessage() {}

func (x *ActorRef) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorRef.ProtoReflect.Descriptor instead.
func (*ActorRef) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{1}
}

func (x *ActorRef) GetStore() *StoreRef {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *ActorRef) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ActorRef) GetPID() *actor.PID {
	if x != nil {
		return x.PID
	}
	return nil
}

type ActorInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ref           *ActorRef              `protobuf:"bytes,1,opt,name=Ref,proto3" json:"Ref,omitempty"`
	CalcLatency   int64                  `protobuf:"varint,2,opt,name=CalcLatency,proto3" json:"CalcLatency,omitempty"`
	LinkLatency   int64                  `protobuf:"varint,3,opt,name=LinkLatency,proto3" json:"LinkLatency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActorInfo) Reset() {
	*x = ActorInfo{}
	mi := &file_platform_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorInfo) ProtoMessage() {}

func (x *ActorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorInfo.ProtoReflect.Descriptor instead.
func (*ActorInfo) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{2}
}

func (x *ActorInfo) GetRef() *ActorRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *ActorInfo) GetCalcLatency() int64 {
	if x != nil {
		return x.CalcLatency
	}
	return 0
}

func (x *ActorInfo) GetLinkLatency() int64 {
	if x != nil {
		return x.LinkLatency
	}
	return 0
}

// Flow is reference to real object or stream
type Flow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`         // ID of referenced object or stream
	Source        *StoreRef              `protobuf:"bytes,2,opt,name=Source,proto3" json:"Source,omitempty"` // points to store actor of a single worker.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Flow) Reset() {
	*x = Flow{}
	mi := &file_platform_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flow) ProtoMessage() {}

func (x *Flow) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flow.ProtoReflect.Descriptor instead.
func (*Flow) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{3}
}

func (x *Flow) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Flow) GetSource() *StoreRef {
	if x != nil {
		return x.Source
	}
	return nil
}

// EncodedObject stores a byte encoded object
type EncodedObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                                  // if returned from ipc call, id won't be set
	Data          []byte                 `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`                              // serialized object data, or nil if current object is a stream
	Source        *StoreRef              `protobuf:"bytes,3,opt,name=Source,proto3" json:"Source,omitempty"`                          // points to store actor of the stream.
	Language      Language               `protobuf:"varint,4,opt,name=Language,proto3,enum=proto.Language" json:"Language,omitempty"` // if is JSON, it can be decoded to either Go, Python, or else it can only be decoded to corresponding language.
	Stream        bool                   `protobuf:"varint,5,opt,name=Stream,proto3" json:"Stream,omitempty"`                         // mark if the object is a stream
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodedObject) Reset() {
	*x = EncodedObject{}
	mi := &file_platform_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodedObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodedObject) ProtoMessage() {}

func (x *EncodedObject) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodedObject.ProtoReflect.Descriptor instead.
func (*EncodedObject) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{4}
}

func (x *EncodedObject) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *EncodedObject) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EncodedObject) GetSource() *StoreRef {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *EncodedObject) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_LANG_UNKNOWN
}

func (x *EncodedObject) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

type StreamChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamID      string                 `protobuf:"bytes,1,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
	EoS           bool                   `protobuf:"varint,2,opt,name=EoS,proto3" json:"EoS,omitempty"`
	Value         *EncodedObject         `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamChunk) Reset() {
	*x = StreamChunk{}
	mi := &file_platform_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamChunk) ProtoMessage() {}

func (x *StreamChunk) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamChunk.ProtoReflect.Descriptor instead.
func (*StreamChunk) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{5}
}

func (x *StreamChunk) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamChunk) GetEoS() bool {
	if x != nil {
		return x.EoS
	}
	return false
}

func (x *StreamChunk) GetValue() *EncodedObject {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *StreamChunk) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Invoke is sent to compute actor, providing a value to its dependency.
type Invoke struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        string                 `protobuf:"bytes,1,opt,name=Target,proto3" json:"Target,omitempty"`       // target actor reference
	SessionID     string                 `protobuf:"bytes,2,opt,name=SessionID,proto3" json:"SessionID,omitempty"` // id of current execution session
	Param         string                 `protobuf:"bytes,3,opt,name=Param,proto3" json:"Param,omitempty"`         // name of parameter
	Value         *Flow                  `protobuf:"bytes,4,opt,name=Value,proto3" json:"Value,omitempty"`         // value of parameter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Invoke) Reset() {
	*x = Invoke{}
	mi := &file_platform_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Invoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoke) ProtoMessage() {}

func (x *Invoke) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoke.ProtoReflect.Descriptor instead.
func (*Invoke) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{6}
}

func (x *Invoke) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Invoke) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *Invoke) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *Invoke) GetValue() *Flow {
	if x != nil {
		return x.Value
	}
	return nil
}

// InvokeStart is sent to compute actor before invoking.
// InvokeStart can be sent to compute actor before Invoke, since it is intended to provide
// reference to its successor and actor info for latency measurement.
type InvokeStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *ActorInfo             `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`           // (optional) actor info for latency measurement, required when using actor group
	SessionID     string                 `protobuf:"bytes,2,opt,name=SessionID,proto3" json:"SessionID,omitempty"` // id of current execution session
	ReplyTo       string                 `protobuf:"bytes,3,opt,name=ReplyTo,proto3" json:"ReplyTo,omitempty"`     // actor to reply to, usually points to calling controller actor
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvokeStart) Reset() {
	*x = InvokeStart{}
	mi := &file_platform_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvokeStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeStart) ProtoMessage() {}

func (x *InvokeStart) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeStart.ProtoReflect.Descriptor instead.
func (*InvokeStart) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{7}
}

func (x *InvokeStart) GetInfo() *ActorInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *InvokeStart) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *InvokeStart) GetReplyTo() string {
	if x != nil {
		return x.ReplyTo
	}
	return ""
}

// InvokeResponse is sent to controller actor after invoking.
type InvokeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        string                 `protobuf:"bytes,1,opt,name=Target,proto3" json:"Target,omitempty"`       // target actor reference
	SessionID     string                 `protobuf:"bytes,2,opt,name=SessionID,proto3" json:"SessionID,omitempty"` // id of current execution session
	Result        *Flow                  `protobuf:"bytes,3,opt,name=Result,proto3" json:"Result,omitempty"`       // result object reference of the invocation
	Error         string                 `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`         // (optional) error message
	Info          *ActorInfo             `protobuf:"bytes,5,opt,name=Info,proto3" json:"Info,omitempty"`           // (optional) actor info for latency measurement, required when using actor group
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvokeResponse) Reset() {
	*x = InvokeResponse{}
	mi := &file_platform_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeResponse) ProtoMessage() {}

func (x *InvokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_platform_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeResponse.ProtoReflect.Descriptor instead.
func (*InvokeResponse) Descriptor() ([]byte, []int) {
	return file_platform_proto_rawDescGZIP(), []int{8}
}

func (x *InvokeResponse) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *InvokeResponse) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *InvokeResponse) GetResult() *Flow {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *InvokeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *InvokeResponse) GetInfo() *ActorInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_platform_proto protoreflect.FileDescriptor

const file_platform_proto_rawDesc = "" +
	"\n" +
	"\x0eplatform.proto\x12\x05proto\x1a\vactor.proto\"8\n" +
	"\bStoreRef\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x1c\n" +
	"\x03PID\x18\x02 \x01(\v2\n" +
	".actor.PIDR\x03PID\"_\n" +
	"\bActorRef\x12%\n" +
	"\x05Store\x18\x01 \x01(\v2\x0f.proto.StoreRefR\x05Store\x12\x0e\n" +
	"\x02ID\x18\x02 \x01(\tR\x02ID\x12\x1c\n" +
	"\x03PID\x18\x03 \x01(\v2\n" +
	".actor.PIDR\x03PID\"r\n" +
	"\tActorInfo\x12!\n" +
	"\x03Ref\x18\x01 \x01(\v2\x0f.proto.ActorRefR\x03Ref\x12 \n" +
	"\vCalcLatency\x18\x02 \x01(\x03R\vCalcLatency\x12 \n" +
	"\vLinkLatency\x18\x03 \x01(\x03R\vLinkLatency\"?\n" +
	"\x04Flow\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12'\n" +
	"\x06Source\x18\x02 \x01(\v2\x0f.proto.StoreRefR\x06Source\"\xa1\x01\n" +
	"\rEncodedObject\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x12\n" +
	"\x04Data\x18\x02 \x01(\fR\x04Data\x12'\n" +
	"\x06Source\x18\x03 \x01(\v2\x0f.proto.StoreRefR\x06Source\x12+\n" +
	"\bLanguage\x18\x04 \x01(\x0e2\x0f.proto.LanguageR\bLanguage\x12\x16\n" +
	"\x06Stream\x18\x05 \x01(\bR\x06Stream\"}\n" +
	"\vStreamChunk\x12\x1a\n" +
	"\bStreamID\x18\x01 \x01(\tR\bStreamID\x12\x10\n" +
	"\x03EoS\x18\x02 \x01(\bR\x03EoS\x12*\n" +
	"\x05Value\x18\x03 \x01(\v2\x14.proto.EncodedObjectR\x05Value\x12\x14\n" +
	"\x05Error\x18\x04 \x01(\tR\x05Error\"w\n" +
	"\x06Invoke\x12\x16\n" +
	"\x06Target\x18\x01 \x01(\tR\x06Target\x12\x1c\n" +
	"\tSessionID\x18\x02 \x01(\tR\tSessionID\x12\x14\n" +
	"\x05Param\x18\x03 \x01(\tR\x05Param\x12!\n" +
	"\x05Value\x18\x04 \x01(\v2\v.proto.FlowR\x05Value\"k\n" +
	"\vInvokeStart\x12$\n" +
	"\x04Info\x18\x01 \x01(\v2\x10.proto.ActorInfoR\x04Info\x12\x1c\n" +
	"\tSessionID\x18\x02 \x01(\tR\tSessionID\x12\x18\n" +
	"\aReplyTo\x18\x03 \x01(\tR\aReplyTo\"\xa7\x01\n" +
	"\x0eInvokeResponse\x12\x16\n" +
	"\x06Target\x18\x01 \x01(\tR\x06Target\x12\x1c\n" +
	"\tSessionID\x18\x02 \x01(\tR\tSessionID\x12#\n" +
	"\x06Result\x18\x03 \x01(\v2\v.proto.FlowR\x06Result\x12\x14\n" +
	"\x05Error\x18\x04 \x01(\tR\x05Error\x12$\n" +
	"\x04Info\x18\x05 \x01(\v2\x10.proto.ActorInfoR\x04Info*I\n" +
	"\bLanguage\x12\x10\n" +
	"\fLANG_UNKNOWN\x10\x00\x12\r\n" +
	"\tLANG_JSON\x10\x01\x12\v\n" +
	"\aLANG_GO\x10\x02\x12\x0f\n" +
	"\vLANG_PYTHON\x10\x03B Z\x1egithub.com/9triver/ignis/protob\x06proto3"

var (
	file_platform_proto_rawDescOnce sync.Once
	file_platform_proto_rawDescData []byte
)

func file_platform_proto_rawDescGZIP() []byte {
	file_platform_proto_rawDescOnce.Do(func() {
		file_platform_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_platform_proto_rawDesc), len(file_platform_proto_rawDesc)))
	})
	return file_platform_proto_rawDescData
}

var file_platform_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_platform_proto_goTypes = []any{
	(Language)(0),          // 0: proto.Language
	(*StoreRef)(nil),       // 1: proto.StoreRef
	(*ActorRef)(nil),       // 2: proto.ActorRef
	(*ActorInfo)(nil),      // 3: proto.ActorInfo
	(*Flow)(nil),           // 4: proto.Flow
	(*EncodedObject)(nil),  // 5: proto.EncodedObject
	(*StreamChunk)(nil),    // 6: proto.StreamChunk
	(*Invoke)(nil),         // 7: proto.Invoke
	(*InvokeStart)(nil),    // 8: proto.InvokeStart
	(*InvokeResponse)(nil), // 9: proto.InvokeResponse
	(*actor.PID)(nil),      // 10: actor.PID
}
var file_platform_proto_depIdxs = []int32{
	10, // 0: proto.StoreRef.PID:type_name -> actor.PID
	1,  // 1: proto.ActorRef.Store:type_name -> proto.StoreRef
	10, // 2: proto.ActorRef.PID:type_name -> actor.PID
	2,  // 3: proto.ActorInfo.Ref:type_name -> proto.ActorRef
	1,  // 4: proto.Flow.Source:type_name -> proto.StoreRef
	1,  // 5: proto.EncodedObject.Source:type_name -> proto.StoreRef
	0,  // 6: proto.EncodedObject.Language:type_name -> proto.Language
	5,  // 7: proto.StreamChunk.Value:type_name -> proto.EncodedObject
	4,  // 8: proto.Invoke.Value:type_name -> proto.Flow
	3,  // 9: proto.InvokeStart.Info:type_name -> proto.ActorInfo
	4,  // 10: proto.InvokeResponse.Result:type_name -> proto.Flow
	3,  // 11: proto.InvokeResponse.Info:type_name -> proto.ActorInfo
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_platform_proto_init() }
func file_platform_proto_init() {
	if File_platform_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_platform_proto_rawDesc), len(file_platform_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_platform_proto_goTypes,
		DependencyIndexes: file_platform_proto_depIdxs,
		EnumInfos:         file_platform_proto_enumTypes,
		MessageInfos:      file_platform_proto_msgTypes,
	}.Build()
	File_platform_proto = out.File
	file_platform_proto_goTypes = nil
	file_platform_proto_depIdxs = nil
}
